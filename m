Return-Path: <linux-kernel+bounces-728596-lists+linux-kernel=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from sv.mirrors.kernel.org (sv.mirrors.kernel.org [IPv6:2604:1380:45e3:2400::1])
	by mail.lfdr.de (Postfix) with ESMTPS id 603DDB02A89
	for <lists+linux-kernel@lfdr.de>; Sat, 12 Jul 2025 13:03:02 +0200 (CEST)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sv.mirrors.kernel.org (Postfix) with ESMTPS id D749FA45F96
	for <lists+linux-kernel@lfdr.de>; Sat, 12 Jul 2025 11:02:34 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id ED09C2C9D;
	Sat, 12 Jul 2025 11:02:55 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="CcOB1mT7"
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 52E35320F;
	Sat, 12 Jul 2025 11:02:54 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1752318175; cv=none; b=PbWjwMhRFtbsSLbcA+ppkOIcU6zC8bfhYIXRUFQ0RI5/9g/cvVuerLDJLc5dttTCkrKeQ5m/GdYjex/VXhjB3lBeO2CPS0FgIJ8xTbPlGelYMDcN9XXEXY4vvI/TobjplO1jjOzMV7Pl5AzdV/ajYbYgdQx7fubgTSVUhQnmgx8=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1752318175; c=relaxed/simple;
	bh=jzMQOv6iAdvYpHha5k/NLNgXonjVTEht8vlZgL3t88s=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=MGOy5Kt6B87JSaEmFG41BH1ccowvRtG6jNa1Y16/HShFgISW6XUczc3SAbXpgcyQ0hLXgIUr1yZhm8LKSVe8VKLIY+mjOf2FLURdpwBGpbATMgWhqUppuD5ucTjXriIRAOKDw7qczQid4WkZSG4R/XKrXKawrYDNg9zGq8jYh/U=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=CcOB1mT7; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id D4064C4CEEF;
	Sat, 12 Jul 2025 11:02:53 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1752318173;
	bh=jzMQOv6iAdvYpHha5k/NLNgXonjVTEht8vlZgL3t88s=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=CcOB1mT7v+VIyTjxEWq0QBlFYvrwN8MSsuWw87TGYM0lqVdcqqq/QEM6ZW0FO7vGU
	 kWnc0DgrKvkKAGQ7orW/8hnyMVS4QsbEsrEVphRBnfL+wj9FGZEToxM33UQ6SWCx4k
	 H/Kn+seJcwGE87CrR9LpzRc0XiHz5/hMKuS4GG8EaRvWFgLQquSTq/LqmzGUefvWDM
	 JF4+OOGcirhW8Ekfe9cOFhUSOhlvmmlYA9SqJB/jjgIHae6l7/x4oIqg/oNFzHsCWJ
	 eoDRkrdWB76z1uno8/rozEwqtDE1pH/Kldqdup2r4D0vxlk8NI8wFTwfxUowhYeSbq
	 fstC3/DkN8Pcg==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1uaY0J-00F6gZ-Cg;
	Sat, 12 Jul 2025 12:02:51 +0100
Date: Sat, 12 Jul 2025 12:02:51 +0100
Message-ID: <864ivhacys.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Cc: Thomas Gleixner <tglx@linutronix.de>,
	Shawn Guo <shawnguo@kernel.org>,
	Sascha Hauer <s.hauer@pengutronix.de>,
	Pengutronix Kernel Team <kernel@pengutronix.de>,
	Fabio Estevam <festevam@gmail.com>,
	Lucas Stach <l.stach@pengutronix.de>,
	Aisheng Dong <aisheng.dong@nxp.com>,
	linux-kernel@vger.kernel.org,
	kernel-janitors@vger.kernel.org,
	imx@lists.linux.dev,
	linux-arm-kernel@lists.infradead.org
Subject: Re: [PATCH] irqchip/imx-irqsteer: Fix irq handling if an error occurs in imx_irqsteer_irq_handler()
In-Reply-To: <a0e9473f-81a4-4933-aa63-e66fbeaf0824@wanadoo.fr>
References: <ad6514c771fef0ac2d1b3c050c6db5d5e0fd034d.1731842478.git.christophe.jaillet@wanadoo.fr>
	<a0e9473f-81a4-4933-aa63-e66fbeaf0824@wanadoo.fr>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/30.1
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: christophe.jaillet@wanadoo.fr, tglx@linutronix.de, shawnguo@kernel.org, s.hauer@pengutronix.de, kernel@pengutronix.de, festevam@gmail.com, l.stach@pengutronix.de, aisheng.dong@nxp.com, linux-kernel@vger.kernel.org, kernel-janitors@vger.kernel.org, imx@lists.linux.dev, linux-arm-kernel@lists.infradead.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Sat, 12 Jul 2025 10:58:35 +0100,
Christophe JAILLET <christophe.jaillet@wanadoo.fr> wrote:
>=20
> Le 17/11/2024 =C3=A0 12:21, Christophe JAILLET a =C3=A9crit=C2=A0:
> > chained_irq_enter(() should be paired with a corresponding
> > chained_irq_exit().
> >=20
> > Here, if (hwirq < 0), a early return occurs and chained_irq_exit() is n=
ot
> > called.
>=20
> After several month without any feedback, this is a polite ping.
> Is this patch correct?

An untested patch is unlikely to make a lot of forward progress, to
be honest.

>=20
> CJ
>=20
>=20
> >=20
> > Add a new label and a goto for fix it.
> >=20
> > Fixes: 28528fca4908 ("irqchip/imx-irqsteer: Add multi output interrupts=
 support")
> > Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
> > ---
> > Compile tested only.
> >=20
> > Review with care, irq handling is sometimes tricky...
> > ---
> >   drivers/irqchip/irq-imx-irqsteer.c | 3 ++-
> >   1 file changed, 2 insertions(+), 1 deletion(-)
> >=20
> > diff --git a/drivers/irqchip/irq-imx-irqsteer.c b/drivers/irqchip/irq-i=
mx-irqsteer.c
> > index 75a0e980ff35..59abe5a8beb8 100644
> > --- a/drivers/irqchip/irq-imx-irqsteer.c
> > +++ b/drivers/irqchip/irq-imx-irqsteer.c
> > @@ -135,7 +135,7 @@ static void imx_irqsteer_irq_handler(struct irq_des=
c *desc)
> >   	if (hwirq < 0) {
> >   		pr_warn("%s: unable to get hwirq base for irq %d\n",
> >   			__func__, irq);
> > -		return;
> > +		goto out;
> >   	}
> >     	for (i =3D 0; i < 2; i++, hwirq +=3D 32) {
> > @@ -153,6 +153,7 @@ static void imx_irqsteer_irq_handler(struct irq_des=
c *desc)
> >   			generic_handle_domain_irq(data->domain, pos + hwirq);
> >   	}
> >   +out:
> >   	chained_irq_exit(irq_desc_get_chip(desc), desc);
> >   }

The real question is *how* do you end-up in this situation.

To trigger this case, you need a mux interrupt that is handled by
imx_irqsteer_irq_handler(), but for which you haven't got a
translation from DT the first place. Do you see the chicken and egg
problem?

In summary, this driver is checking for conditions that can't possibly
happen, and this check should simply be deleted instead of being
blindly "fixed".

	M.

--=20
Without deviation from the norm, progress is not possible.

