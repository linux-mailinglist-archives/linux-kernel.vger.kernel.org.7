Return-Path: <linux-kernel+bounces-805286-lists+linux-kernel=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from ny.mirrors.kernel.org (ny.mirrors.kernel.org [147.75.199.223])
	by mail.lfdr.de (Postfix) with ESMTPS id 78D27B48671
	for <lists+linux-kernel@lfdr.de>; Mon,  8 Sep 2025 10:16:19 +0200 (CEST)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ny.mirrors.kernel.org (Postfix) with ESMTPS id 274B017924C
	for <lists+linux-kernel@lfdr.de>; Mon,  8 Sep 2025 08:16:19 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 2BED12E974A;
	Mon,  8 Sep 2025 08:16:14 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="i32vRR3A"
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 819542E7186;
	Mon,  8 Sep 2025 08:16:13 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1757319373; cv=none; b=OiUzh3Zrt1hvFAjV0h4CZy66ovD7nQylucNiLWwddD5B1xU43OM357g/FTJkE0m9pKfac1u9hrwZt6fJH0FHDf+XVJPKPIjYa7VNqQY+DXJtc5BzeviOu2L/OIPAtr8lKCysSxLgT+cGf4dgBumBhfiAbNVivPsme0fFvi5Yg1w=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1757319373; c=relaxed/simple;
	bh=DLZHF/rUNU9ns+9DDMmo9PmSHU3/mYamUscTiLTEGLQ=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=cHc+Pp4VwK768TE4LtMcZq6+4Pp74b3CBhm9K3ElEKkd4KzLrZ10SxS2W2BtNGYHZv8iuaP0re3zjw+MN2nj5y/ij0FITE6MCbQVXmsNwXIDngYHZAWkPbdYqpWdZ0UfhJWiQsm3Bu0KgVi1DmmyKSNw0f/NVxqDEuXKiYYELmU=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=i32vRR3A; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 032B8C4CEF5;
	Mon,  8 Sep 2025 08:16:12 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1757319373;
	bh=DLZHF/rUNU9ns+9DDMmo9PmSHU3/mYamUscTiLTEGLQ=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=i32vRR3ABJq188+BNWhx97TYzeALeiwRSr6DLIZvIPSi/ATlECtYWCMhYeRpQ4XGD
	 AukMSYoeu6qw/uMsoxdQGC8ceHp8RpkV7oQKKZ79Y3z1IcM06H5+D+OebHibC8w08n
	 oBqj469Wwkjje1jHnqzTozQJXF9OGGg+BJWFt91LzjN9vAHaDgaTuEMsEtF1bBZw9r
	 n03ij3PuGY6HyEYabUE2bZVDu3MD7USL5Wk3VbTUmUZQl3UN/t2Hv8XF6mcALO/4ZJ
	 YMtaTjrUxiHrxcQWNBVC7spalkcY5dQlMokq1XUhFwOVTVe6lmNe9swL6w/p9IJoQg
	 H36f0YLgApwIw==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.98.2)
	(envelope-from <maz@kernel.org>)
	id 1uvX2o-00000004E7Q-2Uk6;
	Mon, 08 Sep 2025 08:16:10 +0000
Date: Mon, 08 Sep 2025 09:16:10 +0100
Message-ID: <86v7ltcqb9.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Alok Tiwari <alok.a.tiwari@oracle.com>
Cc: 	jintack@cs.columbia.edu,
	christoffer.dall@arm.com,
	oliver.upton@linux.dev,
	joey.gouly@arm.com,
	suzuki.poulose@arm.com,
	yuzenghui@huawei.com,
	catalin.marinas@arm.com,
	will@kernel.org,
	linux-arm-kernel@lists.infradead.org,
	kvmarm@lists.linux.dev,
	linux-kernel@vger.kernel.org
Subject: Re: [PATCH] KVM: arm64: vgic: fix incorrect spinlock API usage
In-Reply-To: <20250907201421.3612784-1-alok.a.tiwari@oracle.com>
References: <20250907201421.3612784-1-alok.a.tiwari@oracle.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/30.1
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: alok.a.tiwari@oracle.com, jintack@cs.columbia.edu, christoffer.dall@arm.com, oliver.upton@linux.dev, joey.gouly@arm.com, suzuki.poulose@arm.com, yuzenghui@huawei.com, catalin.marinas@arm.com, will@kernel.org, linux-arm-kernel@lists.infradead.org, kvmarm@lists.linux.dev, linux-kernel@vger.kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

[removing @arm.com addresses that haven't been in use for a very long
time]

On Sun, 07 Sep 2025 21:14:13 +0100,
Alok Tiwari <alok.a.tiwari@oracle.com> wrote:
> 
> The function vgic_flush_lr_state() was calling _raw_spin_unlock()

s/was/is/

> instead of the proper raw_spin_unlock().
>
> _raw_spin_unlock() is an internal low-level API and should not
> be used directly; using raw_spin_unlock() ensures proper locking
> semantics in the vgic code.
> 
> This change replaces low-level API usage with the general kernel
> spinlock API, avoiding misuse of internal functions and aligning
> with kernel locking conventions.

This paragraph doesn't add much, please drop it.

> 
> Fixes: 8fa3adb8c6be ("KVM: arm/arm64: vgic: Make vgic_irq->irq_lock a raw_spinlock")
> Signed-off-by: Alok Tiwari <alok.a.tiwari@oracle.com>
> ---
>  arch/arm64/kvm/vgic/vgic.c | 2 +-
>  1 file changed, 1 insertion(+), 1 deletion(-)
> 
> diff --git a/arch/arm64/kvm/vgic/vgic.c b/arch/arm64/kvm/vgic/vgic.c
> index f5148b38120a..c74d6120a12c 100644
> --- a/arch/arm64/kvm/vgic/vgic.c
> +++ b/arch/arm64/kvm/vgic/vgic.c
> @@ -818,7 +818,7 @@ static void vgic_flush_lr_state(struct kvm_vcpu *vcpu)
>  		 * the AP list has been sorted already.
>  		 */
>  		if (multi_sgi && irq->priority > prio) {
> -			_raw_spin_unlock(&irq->irq_lock);
> +			raw_spin_unlock(&irq->irq_lock);
>  			break;
>  		}
>  

With the above fixed:

Acked-by: Marc Zyngier <maz@kernel.org>

	M.

-- 
Without deviation from the norm, progress is not possible.

