Return-Path: <linux-kernel+bounces-721301-lists+linux-kernel=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from sv.mirrors.kernel.org (sv.mirrors.kernel.org [139.178.88.99])
	by mail.lfdr.de (Postfix) with ESMTPS id C79E1AFC753
	for <lists+linux-kernel@lfdr.de>; Tue,  8 Jul 2025 11:46:01 +0200 (CEST)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sv.mirrors.kernel.org (Postfix) with ESMTPS id E7AF33ABCA6
	for <lists+linux-kernel@lfdr.de>; Tue,  8 Jul 2025 09:45:34 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id E400A265CAA;
	Tue,  8 Jul 2025 09:45:55 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="DToQVbtf"
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 4D5F82135D7;
	Tue,  8 Jul 2025 09:45:53 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1751967955; cv=none; b=Arc8TL475NNN4eMD1QDE8pMUNSuJrry5RYS4JmWFvRC7SIEVjSr3D0qSM1BkMmXX420rqu3pZkk7ukjM3Z6um7mktDNHLpgErUGcOfPEtjY6SwRMf7MD+dMG7YhihI6zNDlMhtGTbYxOGf+vXZ8B68WpzQz0lAHp5lUNoVqxdog=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1751967955; c=relaxed/simple;
	bh=AZAx/SltGk9pKwFXcrvSdtkd/H9XzQsZMgsKKBr+qU8=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=avOeCIowJZ/v++qT1hkky1Y3NmWMAQlJlE5sVCIPTUEpbHEucDSj+WDap/WZwoxA+c++532Rs9P5UiQGheAF7jTPBThcXenLC2LthkC7He0JJNGJCY6H3gYuJefba3+9UDHwYNeCF2e3JrFmRQpACN9yIZ/7AlRJf3H3krTpuZo=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=DToQVbtf; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id B543BC4CEED;
	Tue,  8 Jul 2025 09:45:53 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1751967953;
	bh=AZAx/SltGk9pKwFXcrvSdtkd/H9XzQsZMgsKKBr+qU8=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=DToQVbtfXKIHDKSnMySm5mj5DSPOv20/rvy9ocynafpbCBVOSW8wTh1Q+/9uXB45k
	 3nhxcpaZ/O0inn06UmnecYO8WSW2mQM9ktiwCDOwIdRLXjCW9vM/w8H5m0KXPy9jPH
	 zCRZQSfNMqE2xlMoXjncy9M0ruUukipp8ofy2RpdzZekcmFHm41BqRvdYPx/kTB47A
	 3E1V8j3f6WL15nfmGsX4IMNeP5lP7P+0/wKcJehoKST6lxczACq9KKdbgxY+VatMNQ
	 Nr0TkTidFMY/q33YVGPU1rzA9FUca83CSAx/67LuKrE9z9iygYLWi1UenAfBTKMGGi
	 cjeEHiZw4oaqw==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1uZ4tb-00DhrB-0W;
	Tue, 08 Jul 2025 10:45:51 +0100
Date: Tue, 08 Jul 2025 10:45:50 +0100
Message-ID: <86tt3n9fsh.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Ben Horgan <ben.horgan@arm.com>
Cc: Yury Norov <yury.norov@gmail.com>,
	catalin.marinas@arm.com,
	will@kernel.org,
	oliver.upton@linux.dev,
	joey.gouly@arm.com,
	suzuki.poulose@arm.com,
	yuzenghui@huawei.com,
	linux-arm-kernel@lists.infradead.org,
	kvmarm@lists.linux.dev,
	linux@rasmusvillemoes.dk,
	linux-kernel@vger.kernel.org,
	james.morse@arm.com
Subject: Re: [PATCH 2/2] bitfield: Ensure the return value of type##_replace_bits() is checked
In-Reply-To: <03a76e9a-86ac-4791-9f0a-494b28c07fcc@arm.com>
References: <20250703135729.1807517-1-ben.horgan@arm.com>
	<20250703135729.1807517-3-ben.horgan@arm.com>
	<aGv2WoAtxnEgqV4y@yury>
	<03a76e9a-86ac-4791-9f0a-494b28c07fcc@arm.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/30.1
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: ben.horgan@arm.com, yury.norov@gmail.com, catalin.marinas@arm.com, will@kernel.org, oliver.upton@linux.dev, joey.gouly@arm.com, suzuki.poulose@arm.com, yuzenghui@huawei.com, linux-arm-kernel@lists.infradead.org, kvmarm@lists.linux.dev, linux@rasmusvillemoes.dk, linux-kernel@vger.kernel.org, james.morse@arm.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Tue, 08 Jul 2025 10:42:06 +0100,
Ben Horgan <ben.horgan@arm.com> wrote:
> 
> Hi Yury,
> 
> On 7/7/25 17:31, Yury Norov wrote:
> > Hi Ben,
> > 
> > On Thu, Jul 03, 2025 at 02:57:29PM +0100, Ben Horgan wrote:
> >> As type##_replace_bits() has no side effects it is only useful if its
> >> return value is checked. Add __must_check to enforce this usage. To have
> >> the bits replaced in-place typep##_replace_bits() can be used instead.
> >> 
> >> Signed-off-by: Ben Horgan <ben.horgan@arm.com>
> >> ---
> >>   include/linux/bitfield.h | 4 ++--
> >>   1 file changed, 2 insertions(+), 2 deletions(-)
> >> 
> >> diff --git a/include/linux/bitfield.h b/include/linux/bitfield.h
> >> index 6d9a53db54b6..39333b80d22b 100644
> >> --- a/include/linux/bitfield.h
> >> +++ b/include/linux/bitfield.h
> >> @@ -195,8 +195,8 @@ static __always_inline __##type type##_encode_bits(base v, base field)	\
> >>   		__field_overflow();					\
> >>   	return to((v & field_mask(field)) * field_multiplier(field));	\
> >>   }									\
> >> -static __always_inline __##type type##_replace_bits(__##type old,	\
> >> -					base val, base field)		\
> >> +static __always_inline __##type __must_check type##_replace_bits(__##type old,	\
> >> +							base val, base field)	\
> >>   {									\
> >>   	return (old & ~to(field)) | type##_encode_bits(val, field);	\
> >>   }									\
> > 
> > So, would it make sense to mark _encode_bits() and _get_bits() as
> > __must_check as well? At least from the point of unification, it
> > would.
> Could do. It seems less important as there are no obvious foot-guns
> that these would guards against. Would you like me to add this in a
> v2?
> > 
> > How would we move this - with my bitmap-for next or with arm branch?
> 
> I'm not familiar with the branch machinery so can't comment on this.

The first patch will definitely go in via the KVM/arm64 tree, probably
as a fix for 6.16.

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.

