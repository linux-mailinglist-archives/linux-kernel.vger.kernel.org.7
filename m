Return-Path: <linux-kernel+bounces-761061-lists+linux-kernel=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from sy.mirrors.kernel.org (sy.mirrors.kernel.org [IPv6:2604:1380:40f1:3f00::1])
	by mail.lfdr.de (Postfix) with ESMTPS id 6C02AB1F3D9
	for <lists+linux-kernel@lfdr.de>; Sat,  9 Aug 2025 11:51:47 +0200 (CEST)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sy.mirrors.kernel.org (Postfix) with ESMTPS id E10087B4C2F
	for <lists+linux-kernel@lfdr.de>; Sat,  9 Aug 2025 09:50:14 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 79D29248878;
	Sat,  9 Aug 2025 09:51:39 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="BQRnU3EN"
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id D8BB0205E3B
	for <linux-kernel@vger.kernel.org>; Sat,  9 Aug 2025 09:51:38 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1754733098; cv=none; b=J+j//FsCW+e0nE9ZeRcGawJzY1culIos5dJJzBUvexI8LD+/FLk/zeVzh1N2dAJit2PGXpvp3X+wmqh22bi2M/iT4ddnh7Oyvw/qlhCtsV64Xmobfkq7zZwmAwgMdF8MBNOx8IP/04CT/fB/LpUsTeQDPks55kjJNjRe7SIYpcs=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1754733098; c=relaxed/simple;
	bh=CNDapeMdSOkxK13mZ13X4XJzYBasQIzVk3eLsFf1QE4=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=W5zORyG7XBkzr+XLH9gTwSdnUX31BGegJa04R8HemSPsLcS9IED9Xu3cwRkzdBoXMlVjqAqRooNCBD9/RIJ2xONrL8nlkOFOy9Dy6GLGdKLtCKpBIK4SMxx1f/qfTVhUvbKpCSoccscVow/vBgtfMnR1RcEicm7C+eoLPLr6I+U=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=BQRnU3EN; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 516D8C4CEE7;
	Sat,  9 Aug 2025 09:51:38 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1754733098;
	bh=CNDapeMdSOkxK13mZ13X4XJzYBasQIzVk3eLsFf1QE4=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=BQRnU3ENv+vT1ZE34MP+sIDQ7I5fpDJpQtVR8MiWUdZuJBj6kRO4ZkmXlIHA8ceib
	 +w5RSrJ8O7CLaertFnzZPT2WWeI12p+O1Gk3eFZRGGhkrkjlu+/d/H9zPCkDDiLF7f
	 4jyrFCVPrVyxfgMdV6pNqjXp/nNoVWtQAmZo5FXJpZ5LP7MC3dReYwK/NCmHZsd4TV
	 CrVBgknhGOb9O6AHxdl4238YU4PImN60se8yyz2916HEHqPFaAvXWhdVPHguQwcDEV
	 Nj9WZj7ZyPwmiMUrwp9Vb3pZlPrRg27gJtflNDXXtp8ZA3Ta5X4K47SuOFIP60Rt/e
	 K30SyibaBs3vg==
Received: from sofa.misterjones.org ([185.219.108.64] helo=lobster-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1ukgEh-005bbt-V7;
	Sat, 09 Aug 2025 10:51:36 +0100
Date: Sat, 09 Aug 2025 10:51:35 +0100
Message-ID: <875xewu8k8.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Jinjie Ruan <ruanjinjie@huawei.com>
Cc: <lpieralisi@kernel.org>,
	<tglx@linutronix.de>,
	<linux-arm-kernel@lists.infradead.org>,
	<linux-kernel@vger.kernel.org>
Subject: Re: [RFC PATCH -next] irqchip/gic-v5: Improve the SPI alloc efficiency
In-Reply-To: <20250809092920.3765609-1-ruanjinjie@huawei.com>
References: <20250809092920.3765609-1-ruanjinjie@huawei.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/30.1
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: ruanjinjie@huawei.com, lpieralisi@kernel.org, tglx@linutronix.de, linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Sat, 09 Aug 2025 10:29:20 +0100,
Jinjie Ruan <ruanjinjie@huawei.com> wrote:
> 
> If the GICv5 system has a large number of PEs and IRS components,
> traversing the linked list to find the irs_data corresponding
> to a specific SPI interrupt will be very slow.

Define "very slow".

> 
> Since the maximum number of IRS nodes, the minimum and maximum SPI
> interrupt numbers for each IRS is known during the initialization
> of the IRS nodes, sort the IRS nodes by interrupt number at
> the initial stage. This way, when allocating SPI interrupts, we can
> directly perform a binary search on the irs_data
> using the SPI interrupt number with O(log N) complexity.

Here we go again... Frankly, before we start optimising the crap out
of this, I really want numbers:

- How many IRSs to you imagine having? 2? 64? 4096?

- How often do we walk that list?

I can't answer the first question, but I can definitely answer the
second one: we do it exactly *ONCE* per SPI, at the point of
allocation. And once it is allocated, we don't do it again.

Unless you demonstrate, with actual figures taken from actual
hardware, that what we have is not good enough, that we need some
binary search to walk the thousands of IRSs that you have in your
system and that it actually affects performance, I don't buy it at
all.

Premature optimisation, evil, and all that jazz...

Thanks,

	M.

-- 
Jazz isn't dead. It just smells funny.

